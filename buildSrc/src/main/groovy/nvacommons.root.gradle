plugins {
    id 'io.github.gradle-nexus.publish-plugin'
    id 'nvacommons.gradlelint'
    id 'nvacommons.java-conventions'
    id 'jacoco-report-aggregation'
    id 'com.github.ben-manes.versions'
}

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty("sonatypeUsername")
            password = findProperty("sonatypePassword")
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
        }
    }

    clientTimeout = Duration.ofSeconds(600)
    connectTimeout = Duration.ofSeconds(60)
}

dependencies {
    subprojects.forEach {
        jacocoAggregation it
    }
}

reporting {
    reports {
        testCodeCoverageReport(JacocoCoverageReport) {
            testSuiteName = 'test'
        }
    }
}

tasks.named('check') {
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
}

def isNonStable(String version) {
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { version.toUpperCase().contains(it) }

    // Stable version patterns: digits/dots/v/hyphens optionally ending with -r/-jre/-android
    def stableVersionPattern = /^[0-9,.v-]+(-r|-jre)?$/
    return !stableKeyword && !(version ==~ stableVersionPattern)
}

tasks.named('dependencyUpdates') {
    checkForGradleUpdate = true
    outputDir = 'build/dependencyUpdates'
    reportfileName = 'report'
    gradleReleaseChannel='current'
    rejectVersionIf {
        // Don't suggest upgrading from a stable version to a non-stable version
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
